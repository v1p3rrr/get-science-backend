name: CI/CD - Build, Push, and Deploy

on:
  push:
    branches: ["master"]

jobs:
  build-push-deploy:
    runs-on: ubuntu-latest
    env:
      IMAGE_NAME: ${{ secrets.DOCKERHUB_LOGIN }}/get-science-backend:latest

    steps:
      - name: Checkout the repository
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'gradle'

      - name: Grant permission to Gradle Wrapper
        run: chmod +x ./gradlew

      - name: Run Tests
        run: ./gradlew test --no-daemon

      - name: Build Project (без тестов, для Dockerfile)
        run: ./gradlew build -x test --no-daemon --refresh-dependencies

      - name: Log in to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_LOGIN }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Build Docker image
        run: docker build . --file Dockerfile -t ${{ secrets.DOCKER_IMAGE_NAME }}

      - name: Push image to Docker Hub
        run: docker push ${{ secrets.DOCKER_IMAGE_NAME }}

      - name: Deploy to production server over SSH
        if: github.event_name == 'push'
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.DEPLOY_SSH_HOST }}
          username: ${{ secrets.DEPLOY_SSH_USER }}
          key: ${{ secrets.DEPLOY_SSH_PRIVATE_KEY }}
          script: |
            cd /get-science/get-science-backend
            
            git fetch origin
            git checkout master || git checkout -b master
            git reset --hard origin/master
            
            echo "Stopping old containers (if any)..."
            docker compose -f /get-science/get-science-backend/docker-compose.yml down

            echo "Removing old image..."
            docker rmi -f ${{ secrets.DOCKER_IMAGE_NAME }} || true

            echo "Pulling new image..."
            docker pull ${{ secrets.DOCKER_IMAGE_NAME }}:latest

            echo "Starting new containers..."
            docker compose -f /get-science/get-science-backend/docker-compose.yml up -d --remove-orphans

#            echo "Pruning unused Docker data..."
#            docker system prune -af --volumes