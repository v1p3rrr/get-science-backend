services:
  postgres:
    container_name: postgres
    image: 'postgres:latest'
    environment:
      POSTGRES_DB: GetScienceDb
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_USER: ${DATABASE_USERNAME}
    ports:
      - '5432'
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./config/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    env_file:
      - deploy.env
    networks:
      - common

  getscience:
    container_name: getscience
    image: vprlol/get-science-backend:latest
    ports:
      - "8080:8080"
    depends_on:
      - postgres
    env_file:
      - deploy.env
    environment:
      SPRING_PROFILES_ACTIVE: prom
    volumes:
      - ./src/main/resources/keystore.jks:/app/keystore.jks
    networks:
      - common
      - app-network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"


  prometheus:
    container_name: prometheus
    image: prom/prometheus:v2.53.4
    ports:
      - "9090:9090"
    volumes:
      - prometheus-data:/prometheus
      - ./config/prometheus/prometheus.yaml:/etc/prometheus/prometheus.yml
      - ./src/main/resources/prometheus/rules.yml:/etc/prometheus/rules/application.yml
    networks:
      - common

  grafana:
    container_name: grafana
    image: grafana/grafana
    ports:
      - "3001:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    depends_on:
      - prometheus
    volumes:
      - grafana-data:/var/lib/grafana
      - ./config/grafana/provisioning/datasources:/etc/grafana/provisioning/datasources/
      - ./config/grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards/
    networks:
      - common

  redis:
    container_name: redis
    image: redis
    ports:
      - "6379:6379"
    networks:
      - common


  elasticsearch:
    container_name: elasticsearch
    image: elasticsearch:8.5.3
    environment:
        - bootstrap.memory_lock=true
        - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
        - "discovery.type=single-node"
        - xpack.security.enabled=false
    ports:
        - "9200:9200"
    volumes:
        - elasticsearch_data:/usr/share/elasticsearch/data
    networks:
        - common
    depends_on:
      - getscience

  kibana:
    container_name: kibana
    image: kibana:8.3.3
    ports:
        - "5601:5601"
    environment:
        ELASTICSEARCH_URL: http://elasticsearch:9200
        ELASTICSEARCH_HOSTS: '["http://elasticsearch:9200"]'
    depends_on:
        - elasticsearch
    networks:
        - common

  logstash:
    container_name: logstash
    image: logstash:8.3.3
    volumes:
      - ./config/logstash/config:/usr/share/logstash/config/
      - ./config/logstash/pipeline:/usr/share/logstash/pipeline/
    ports:
      - "5044:5044"
      - "5000:5000/tcp"
      - "5000:5000/udp"
      - "9600:9600"
    environment:
      LS_JAVA_OPTS: "-Xmx256m -Xms256m"
    networks:
      - common
    depends_on:
      - elasticsearch

volumes:
  postgres-data:
  grafana-data:
  prometheus-data:
  elasticsearch_data:
    driver: local

networks:
  common:
    driver: bridge
  app-network:
    name: app-network
